diff --git a/src/app/app.routes.ts b/src/app/app.routes.ts
index 368f0c6..397897d 100644
--- a/src/app/app.routes.ts
+++ b/src/app/app.routes.ts
@@ -10,4 +10,8 @@ export const routes: Routes = [
     path: 'dashboard',
     loadChildren: () => import('./features/dashboard/dashboard.routes'),
   },
+  {
+    path: 'medicamentos',
+    loadChildren: () => import('./features/medication/medication.routes'),
+  },
 ];
diff --git a/src/app/components/confirmation-dialog/confirmation-dialog.component.html b/src/app/components/confirmation-dialog/confirmation-dialog.component.html
new file mode 100644
index 0000000..a001600
--- /dev/null
+++ b/src/app/components/confirmation-dialog/confirmation-dialog.component.html
@@ -0,0 +1,12 @@
+<h2 mat-dialog-title>{{ data.title }}</h2>
+<mat-dialog-content class="mat-typography">
+  <p>{{ data.message }}</p>
+</mat-dialog-content>
+<mat-dialog-actions align="end">
+  <button mat-button (click)="onCancel()">
+    {{ data.cancelButtonText || 'Cancelar' }}
+  </button>
+  <button mat-flat-button color="primary" (click)="onConfirm()" cdkFocusInitial>
+    {{ data.confirmButtonText }}
+  </button>
+</mat-dialog-actions>
diff --git a/src/app/components/confirmation-dialog/confirmation-dialog.component.scss b/src/app/components/confirmation-dialog/confirmation-dialog.component.scss
new file mode 100644
index 0000000..57fe260
--- /dev/null
+++ b/src/app/components/confirmation-dialog/confirmation-dialog.component.scss
@@ -0,0 +1,12 @@
+mat-dialog-content {
+  min-width: 300px;
+  max-width: 500px;
+}
+
+mat-dialog-actions {
+  margin-top: 16px;
+}
+
+h2 {
+  margin-top: 0;
+}
diff --git a/src/app/components/confirmation-dialog/confirmation-dialog.component.ts b/src/app/components/confirmation-dialog/confirmation-dialog.component.ts
new file mode 100644
index 0000000..d8dbf35
--- /dev/null
+++ b/src/app/components/confirmation-dialog/confirmation-dialog.component.ts
@@ -0,0 +1,27 @@
+import { Component, Inject } from '@angular/core';
+import { CommonModule } from '@angular/common';
+import { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';
+import { MatButtonModule } from '@angular/material/button';
+import { ConfirmationDialogData } from '../../models/confirmation-dialog.model';
+
+@Component({
+  selector: 'app-confirmation-dialog',
+  standalone: true,
+  imports: [CommonModule, MatDialogModule, MatButtonModule],
+  templateUrl: './confirmation-dialog.component.html',
+  styleUrls: ['./confirmation-dialog.component.scss']
+})
+export class ConfirmationDialogComponent {
+  constructor(
+    public dialogRef: MatDialogRef<ConfirmationDialogComponent>,
+    @Inject(MAT_DIALOG_DATA) public data: ConfirmationDialogData
+  ) {}
+
+  onCancel(): void {
+    this.dialogRef.close(false);
+  }
+
+  onConfirm(): void {
+    this.dialogRef.close(true);
+  }
+}
diff --git a/src/app/features/dashboard/reminder-list-item/reminder-list-item.component.scss b/src/app/features/dashboard/reminder-list-item/reminder-list-item.component.scss
index ba06fa9..0f375e5 100644
--- a/src/app/features/dashboard/reminder-list-item/reminder-list-item.component.scss
+++ b/src/app/features/dashboard/reminder-list-item/reminder-list-item.component.scss
@@ -13,8 +13,9 @@
   margin-right: 16px;
   
   img {
-    width: 100px;
-    height: 100px;
+    width: 80px;
+    height: 80px;
+    padding: 10px;
     object-fit: contain;
   }
 }
@@ -24,8 +25,8 @@
   max-width: 30%; 
   
   .medication-name {
-    font-weight: 600;
-    font-size: 16px;
+    font-weight: 400;
+    font-size: 22px;
     margin-bottom: 4px;
   }
   
diff --git a/src/app/features/dashboard/reminder-list-item/reminder-list-item.component.ts b/src/app/features/dashboard/reminder-list-item/reminder-list-item.component.ts
index 1849aa5..2c33e20 100644
--- a/src/app/features/dashboard/reminder-list-item/reminder-list-item.component.ts
+++ b/src/app/features/dashboard/reminder-list-item/reminder-list-item.component.ts
@@ -2,6 +2,7 @@ import { Component, Input } from '@angular/core';
 import { CommonModule } from '@angular/common';
 import { MatIconModule } from '@angular/material/icon';
 import { MedicationReminder } from '../../../models/medication-reminder.model';
+import { MedicationReminderService } from '../../../services/medication-reminder.service';
 
 @Component({
   selector: 'app-reminder-list-item',
@@ -13,6 +14,10 @@ import { MedicationReminder } from '../../../models/medication-reminder.model';
 export class ReminderListItemComponent {
   @Input() reminder!: MedicationReminder;
 
+  constructor(
+    private readonly medicationReminderService: MedicationReminderService
+  ) {}
+
   getStatusIcon(): string {
     switch (this.reminder.status) {
       case 'Tomada':
@@ -27,8 +32,6 @@ export class ReminderListItemComponent {
   }
 
   getMedicationImage(): string {
-    return this.reminder.type === 'tablet'
-      ? 'https://storage.googleapis.com/medicapp/tablet.png'
-      : 'https://storage.googleapis.com/medicapp/capsule.png';
+    return this.medicationReminderService.getMedicationImage(this.reminder);
   }
 }
diff --git a/src/app/features/medication/medication-list-item/medication-list-item.component.html b/src/app/features/medication/medication-list-item/medication-list-item.component.html
new file mode 100644
index 0000000..8998d76
--- /dev/null
+++ b/src/app/features/medication/medication-list-item/medication-list-item.component.html
@@ -0,0 +1,35 @@
+<div class="medication-card">
+  <div class="medication-image">
+    <img [src]="getMedicationImage()" alt="Medication" />
+  </div>
+
+  <div class="medication-info">
+    <div class="medication-name">{{ medication.name }}</div>
+    <div class="medication-concentration">{{ medication.concentration }}</div>
+    <div class="medication-reminders">
+      <mat-icon>schedule</mat-icon>
+      <span>3 recordatorios</span>
+    </div>
+  </div>
+
+  <div class="medication-menu">
+    <button
+      mat-icon-button
+      [matMenuTriggerFor]="medicationMenu"
+      aria-label="Medication menu"
+    >
+      <mat-icon>more_vert</mat-icon>
+    </button>
+
+    <mat-menu #medicationMenu="matMenu">
+      <button mat-menu-item (click)="onEditMedication()">
+        <mat-icon>edit</mat-icon>
+        <span>Editar</span>
+      </button>
+      <button mat-menu-item (click)="onDeleteMedication()">
+        <mat-icon>delete</mat-icon>
+        <span>Eliminar</span>
+      </button>
+    </mat-menu>
+  </div>
+</div>
diff --git a/src/app/features/medication/medication-list-item/medication-list-item.component.scss b/src/app/features/medication/medication-list-item/medication-list-item.component.scss
new file mode 100644
index 0000000..90bbdc7
--- /dev/null
+++ b/src/app/features/medication/medication-list-item/medication-list-item.component.scss
@@ -0,0 +1,57 @@
+.medication-card {
+  display: flex;
+  align-items: center;
+  background-color: #ffffff;
+  border-radius: 8px;
+  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
+  padding: 12px;
+  margin-bottom: 12px;
+  position: relative;
+}
+
+.medication-image {
+  margin-right: 16px;
+
+  img {
+    width: 80px;
+    height: 80px;
+    padding: 10px;
+    object-fit: contain;
+  }
+}
+
+.medication-info {
+  flex: 1;
+  max-width: 30%;
+
+  .medication-name {
+    font-weight: 400;
+    font-size: 22px;
+    margin-bottom: 4px;
+  }
+
+  .medication-concentration {
+    color: #666;
+    font-size: 14px;
+  }
+
+  .medication-reminders {
+    margin-left: auto;
+    display: flex;
+    align-items: center;
+
+    mat-icon {
+      margin-right: 4px;
+      color: #666;
+    }
+
+    span {
+      font-size: 14px;
+      color: #666;
+    }
+  }
+}
+
+.medication-menu {
+  margin-left: auto;
+}
diff --git a/src/app/features/medication/medication-list-item/medication-list-item.component.ts b/src/app/features/medication/medication-list-item/medication-list-item.component.ts
new file mode 100644
index 0000000..bc4988b
--- /dev/null
+++ b/src/app/features/medication/medication-list-item/medication-list-item.component.ts
@@ -0,0 +1,47 @@
+import { Component, Input } from '@angular/core';
+import { MedicationReminder } from '../../../models/medication-reminder.model';
+import { MedicationReminderService } from '../../../services/medication-reminder.service';
+import { MatIconModule } from '@angular/material/icon';
+import { CommonModule } from '@angular/common';
+import { MatButtonModule } from '@angular/material/button';
+import { MatMenuModule } from '@angular/material/menu';
+import { DialogService } from '../../../services/dialog.service';
+
+@Component({
+  selector: 'app-medication-list-item',
+  standalone: true,
+  imports: [CommonModule, MatIconModule, MatButtonModule, MatMenuModule],
+  templateUrl: './medication-list-item.component.html',
+  styleUrl: './medication-list-item.component.scss',
+})
+export class MedicationListItemComponent {
+  @Input() medication!: MedicationReminder;
+
+  constructor(
+    private readonly medicationReminderService: MedicationReminderService,
+    private readonly dialogService: DialogService
+  ) {}
+
+  getMedicationImage(): string {
+    return this.medicationReminderService.getMedicationImage(this.medication);
+  }
+
+  onDeleteMedication(): void {
+    this.dialogService
+      .openConfirmationDialog({
+        title: `Eliminar medicamento "${this.medication.name}"`,
+        message: 'Al eliminar el medicamento, se eliminarÃ¡n todos los recordatorios relacionados.',
+        confirmButtonText: 'Eliminar',
+        cancelButtonText: 'Cancelar',
+      })
+      .subscribe((confirmed) => {
+        if (confirmed) {
+          console.log('Medication deleted:', this.medication);
+        }
+      });
+  }
+
+  onEditMedication(): void {
+    console.log('Edit medication:', this.medication);
+  }
+}
diff --git a/src/app/features/medication/medication-list/medication-list.component.html b/src/app/features/medication/medication-list/medication-list.component.html
new file mode 100644
index 0000000..4cf73bd
--- /dev/null
+++ b/src/app/features/medication/medication-list/medication-list.component.html
@@ -0,0 +1,7 @@
+<div class="medications-container">
+  <div class="medications-list">
+    @for(medication of medications; track medication.id){
+      <app-medication-list-item [medication]="medication" />
+    }
+  </div>
+</div>
diff --git a/src/app/features/medication/medication-list/medication-list.component.scss b/src/app/features/medication/medication-list/medication-list.component.scss
new file mode 100644
index 0000000..e69de29
diff --git a/src/app/features/medication/medication-list/medication-list.component.ts b/src/app/features/medication/medication-list/medication-list.component.ts
new file mode 100644
index 0000000..82c300a
--- /dev/null
+++ b/src/app/features/medication/medication-list/medication-list.component.ts
@@ -0,0 +1,48 @@
+import {
+  Component,
+  Input,
+  OnChanges,
+  OnInit,
+  SimpleChanges,
+} from '@angular/core';
+import { MedicationReminderService } from '../../../services/medication-reminder.service';
+import { MedicationReminder } from '../../../models/medication-reminder.model';
+import { CommonModule } from '@angular/common';
+import { MedicationListItemComponent } from '../medication-list-item/medication-list-item.component';
+
+@Component({
+  selector: 'app-medication-list',
+  standalone: true,
+  imports: [CommonModule, MedicationListItemComponent],
+  templateUrl: './medication-list.component.html',
+  styleUrl: './medication-list.component.scss',
+})
+export class MedicationListComponent implements OnInit, OnChanges {
+  @Input() selectedPatient: any = null;
+  medications: MedicationReminder[] = [];
+
+  constructor(private medicationRemindersService: MedicationReminderService) {}
+
+  ngOnInit(): void {
+    this.loadMedications();
+  }
+
+  ngOnChanges(changes: SimpleChanges): void {
+    if (changes['selectedPatient']) {
+      this.loadMedications();
+    }
+  }
+
+  loadMedications(): void {
+    const patientId = this.selectedPatient?.id;
+
+    this.medicationRemindersService.getReminders(patientId).subscribe(
+      (medications) => {
+        this.medications = medications;
+      },
+      (error) => {
+        console.error('Error fetching medications:', error);
+      }
+    );
+  }
+}
diff --git a/src/app/features/medication/medication.component.html b/src/app/features/medication/medication.component.html
new file mode 100644
index 0000000..c591779
--- /dev/null
+++ b/src/app/features/medication/medication.component.html
@@ -0,0 +1,25 @@
+<app-sidenav>
+  <div class="app-container">
+    <app-app-bar (patientSelected)="onPatientSelected($event)"></app-app-bar>
+
+    <div class="main-content">
+      <app-patient-info
+        [selectedPatient]="selectedPatient"
+        *ngIf="selectedPatient"
+      ></app-patient-info>
+
+      <div class="medication-header">
+        <h5>Medicamentos agregados</h5>
+        <mat-icon>arrow_forward</mat-icon>
+        <button mat-flat-button color="primary" (click)="onAddMedication()">
+          <mat-icon>add</mat-icon>
+          Agregar
+        </button>
+      </div>
+
+      <app-medication-list
+        [selectedPatient]="selectedPatient"
+      ></app-medication-list>
+    </div>
+  </div>
+</app-sidenav>
diff --git a/src/app/features/medication/medication.component.scss b/src/app/features/medication/medication.component.scss
new file mode 100644
index 0000000..811cb31
--- /dev/null
+++ b/src/app/features/medication/medication.component.scss
@@ -0,0 +1,37 @@
+.app-container {
+  display: flex;
+  flex-direction: column;
+  height: 100vh;
+  overflow: hidden;
+}
+
+.main-content {
+  flex: 1;
+  overflow-y: auto;
+  padding: 16px;
+}
+
+.medication-header {
+  display: flex;
+  align-items: center;
+  justify-content: space-between;
+  margin-bottom: 16px;
+
+  h5 {
+    margin: 0;
+    display: flex;
+    align-items: center;
+  }
+
+  mat-icon {
+    margin-left: 8px;
+  }
+
+  button {
+    margin-left: auto;
+
+    mat-icon {
+      margin-left: 0px;
+    }
+  }
+}
diff --git a/src/app/features/medication/medication.component.ts b/src/app/features/medication/medication.component.ts
new file mode 100644
index 0000000..20921f6
--- /dev/null
+++ b/src/app/features/medication/medication.component.ts
@@ -0,0 +1,37 @@
+import { CommonModule } from '@angular/common';
+import { Component } from '@angular/core';
+import { SidenavComponent } from '../../components/sidenav/sidenav.component';
+import { AppBarComponent } from '../../components/app-bar/app-bar.component';
+import { Patient } from '../../models/patient.model';
+import { PatientInfoComponent } from '../../components/patient-info/patient-info.component';
+import { MedicationListComponent } from './medication-list/medication-list.component';
+import { MatIconModule } from '@angular/material/icon';
+import { MatButtonModule } from '@angular/material/button';
+
+@Component({
+  selector: 'app-medication',
+  standalone: true,
+  imports: [
+    CommonModule,
+    SidenavComponent,
+    AppBarComponent,
+    PatientInfoComponent,
+    MedicationListComponent,
+    MatIconModule,
+    MatButtonModule,
+  ],
+  templateUrl: './medication.component.html',
+  styleUrl: './medication.component.scss',
+})
+export class MedicationComponent {
+  title = 'medicapp-web';
+  selectedPatient: Patient | null = null;
+
+  onPatientSelected(patient: Patient): void {
+    this.selectedPatient = patient;
+  }
+
+  onAddMedication(): void {
+    console.log('Add Medication button clicked');
+  }
+}
diff --git a/src/app/features/medication/medication.routes.ts b/src/app/features/medication/medication.routes.ts
new file mode 100644
index 0000000..94067de
--- /dev/null
+++ b/src/app/features/medication/medication.routes.ts
@@ -0,0 +1,11 @@
+import { Routes } from '@angular/router';
+
+const medicationRoutes: Routes = [
+  {
+    path: '',
+    loadComponent: () =>
+      import('./medication.component').then((m) => m.MedicationComponent),
+  },
+];
+
+export default medicationRoutes;
diff --git a/src/app/models/confirmation-dialog.model.ts b/src/app/models/confirmation-dialog.model.ts
new file mode 100644
index 0000000..dde6be6
--- /dev/null
+++ b/src/app/models/confirmation-dialog.model.ts
@@ -0,0 +1,6 @@
+export interface ConfirmationDialogData {
+  title: string;
+  message: string;
+  confirmButtonText: string;
+  cancelButtonText?: string;
+}
diff --git a/src/app/services/dialog.service.ts b/src/app/services/dialog.service.ts
new file mode 100644
index 0000000..e70d880
--- /dev/null
+++ b/src/app/services/dialog.service.ts
@@ -0,0 +1,22 @@
+import { Injectable } from '@angular/core';
+import { MatDialog } from '@angular/material/dialog';
+import { Observable } from 'rxjs';
+import { ConfirmationDialogComponent } from '../components/confirmation-dialog/confirmation-dialog.component';
+import { ConfirmationDialogData } from '../models/confirmation-dialog.model';
+
+@Injectable({
+  providedIn: 'root'
+})
+export class DialogService {
+  constructor(private dialog: MatDialog) {}
+
+  openConfirmationDialog(data: ConfirmationDialogData): Observable<boolean> {
+    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {
+      width: '350px',
+      data,
+      disableClose: true
+    });
+
+    return dialogRef.afterClosed();
+  }
+}
diff --git a/src/app/services/medication-reminder.service.ts b/src/app/services/medication-reminder.service.ts
index e5e9eda..19d4463 100644
--- a/src/app/services/medication-reminder.service.ts
+++ b/src/app/services/medication-reminder.service.ts
@@ -18,4 +18,20 @@ export class MedicationReminderService {
     }
     return of([]);
   }
+
+  getMedications(patientId?: number): Observable<MedicationReminder[]> {
+    if (patientId) {
+      const filteredReminders = mockReminders.filter(
+        (reminder) => reminder.patientId === patientId
+      );
+      return of(filteredReminders);
+    }
+    return of([]);
+  }
+
+  getMedicationImage({ type }: MedicationReminder): string {
+    return type === 'tablet'
+      ? 'https://storage.googleapis.com/medicapp/tablet.png'
+      : 'https://storage.googleapis.com/medicapp/capsule.png';
+  }
 }
